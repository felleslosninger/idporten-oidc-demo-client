# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      APPLICATION: oidc-test-client
    steps:
      - name: Set imagetag as env variable
        run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B spring-boot:build-image --file pom.xml -Dspring-boot.build-image.imageName=${{ secrets.REGISTRY_URL }}/${{env.APPLICATION}}:$IMAGETAG
      - name: Container image scan
        uses: Azure/container-scan@v0
        with:
          # Docker image to scan
          image-name: ${{ secrets.REGISTRY_URL }}/${{env.APPLICATION}}:${{env.IMAGETAG}}
          # Minimum severities of vulnerabilities to be displayed (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)
          token: ${{ github.token }}
          severity-threshold: HIGH
      - name: 'push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run:
          docker push ${{ secrets.REGISTRY_URL }}/${{env.APPLICATION}}:${{env.IMAGETAG}}
      - name: 'update cd'
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4 # pin@v1.1.3
        with:
          token: ${{ secrets.EID_BUILD_PAT }}
          event-type: update-idporten-version
          repository: 'felleslosninger/idporten-cd'
          client-payload: '{"application": "${{env.APPLICATION}}", "image": "${{secrets.REGISTRY_URL}}/${{env.APPLICATION}}:${{env.IMAGETAG}}","version":"${{env.IMAGETAG}}"}'
